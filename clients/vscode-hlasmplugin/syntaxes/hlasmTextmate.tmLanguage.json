{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "IBM HLASM",
  "patterns": [
    {
      "include": "#general_hlasm_statement"
    }
  ],
  "repository": {
    "general_hlasm_statement": {
      "patterns": [
        {
          "include": "#lineTooLong"
        },
        {
          "include": "#multiline_syntax"
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "multiline_syntax": {
      "patterns": [
        {
          "name": "source.hlasm.multiline_syntax",
          "begin": "^(?=.{71}\\S)",
          "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
          "applyEndPatternLast": 1,
          "patterns": [
            {
              "include": "#asmMultilineLineStart"
            },
            {
              "include": "#operandsRemarksMultilineStart"
            }
          ]
        }
      ]
    },
    "asmMultilineLineStart": {
      "name": "source.hlasm.asmMultilineLineStart",
      "match": "(^[^*]\\S*\\s+\\S+)\\s*",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#nameFieldAndInstruction"
            }
          ]
        }
      }
    },
    "operandsRemarksMultilineStart": {
      "name": "source.hlasm.operandsRemarksMultilineStart",
      "begin": "(?=.+)",
      "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#operandsRemarksMultiline"
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "operandsRemarksMultiline": {
      "name": "source.hlasm.operandsRemarksMultiline",
      "begin": "(?=\\S+)",
      "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "include": "#operandsRemarks"
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "operandsRemarks": {
      "name": "source.hlasm.operandsRemarks",
      "begin": "(?=\\S)(?<=^.{2,71})",
      "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
      "applyEndPatternLast": 0,
      "patterns": [
        {
          "include": "#invalidMultilineBlock"
        },
        {
          "match": "(^\\s{15})"
        },
        {
          "include": "#sequenceSymbolOperandField"
        },
        {
          "include": "#asmArgumentsOnly"
        },
        {
          "match": "(?<=,)(\\s.*)(?<=^.{0,71})",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#operandsDoneRemarksLeft"
                }
              ]
            }
          }
        },
        {
          "begin": "(?<!,)(?=\\s+(?<=^.{0,71}))",
          "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
          "applyEndPatternLast": 1,
          "comment": "Operands ended on this line",
          "patterns": [
            {
              "include": "#invalidMultilineBlock"
            },
            {
              "include": "#operandsDoneRemarksLeft"
            },
            {
              "include": "#lineEnd"
            }
          ]
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "operandsDoneRemarksLeft": {
      "patterns": [
        {
          "match": "(\\S+.*)(?<=^.{0,71})",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#remark"
                }
              ]
            }
          }
        }
      ]
    },
    "invalidMultilineBlock": {
      "begin": "(?=^\\s*\\S+(?<=^.{0,15}))|(?=^.{80}\\s*\\S+)",
      "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
      "applyEndPatternLast": 1,
      "patterns": [
        {
          "match": "(^.*)",
          "captures": {
            "1": {
              "name": "invalid.illegal"
            }
          }
        }
      ]
    },
    "hlasm_syntax": {
      "patterns": [
        {
          "include": "#lineTooLong"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#parseLine"
        },
        {
          "include": "#asmArgumentLine"
        },
        {
          "include": "#asmLineStart"
        }
      ]
    },
    "additionalAsmHighlight": {
      "patterns": [
        {
          "include": "#nameField"
        },
        {
          "include": "#asmSpecialStatements"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#numbers"
        }
      ]
    },
    "lineTooLong": {
      "patterns": [
        {
          "name": "invalid.illegal.hlasm",
          "match": "^.{81,}"
        }
      ]
    },
    "lineComment": {
      "patterns": [
        {
          "name": "comment.hlasm",
          "match": "^(\\*.{70})(.*)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#remark"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "match": "(\\s.*)",
                  "captures": {
                    "1": {
                      "patterns": [
                        {
                          "include": "#lineEnd"
                        }
                      ]
                    }
                  }
                },
                {
                  "match": "([^\\s])(.*)",
                  "captures": {
                    "1": {
                      "name": "invalid.illegal.hlasm"
                    },
                    "2": {
                      "patterns": [
                        {
                          "include": "#sequenceNumbers"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "match": "\\*.*",
          "name": "comment.hlasm"
        },
        {
          "match": "\\.\\*.*",
          "name": "comment.hlasm"
        }
      ]
    },
    "parseLine": {
      "patterns": [
        {
          "match": "^(.{71})(.*)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#asmArgumentLine"
                },
                {
                  "include": "#asmLineStart"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "include": "#lineEnd"
                }
              ]
            }
          }
        }
      ]
    },
    "asmLineStart": {
      "patterns": [
        {
          "match": "^([^*]\\S*)?\\s+(.*)$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#nameField"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "include": "#asmInstruction"
                }
              ]
            }
          }
        }
      ]
    },
    "asmInstruction": {
      "patterns": [
        {
          "match": "(\\S+)\\s*(.*)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#instruction"
                }
              ]
            },
            "2": {
              "patterns": [
                {
                  "include": "#asmArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "asmArgumentLine": {
      "patterns": [
        {
          "match": "^\\s+(\\S+=.*)$",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#asmArguments"
                }
              ]
            }
          }
        }
      ]
    },
    "asmArguments": {
      "patterns": [
        {
          "include": "#asmArgumentsOnly"
        },
        {
          "match": "\\s.*",
          "name": "comment.hlasm"
        }
      ]
    },
    "asmArgumentsOnly": {
      "patterns": [
        {
          "comment": "#stringType"
        },
        {
          "include": "#openEndedArgs"
        },
        {
          "include": "#quoteType"
        },
        {
          "match": "([^\\(\\)\\s]+)(?<=^.{0,71})",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            }
          }
        }
      ]
    },
    "openEndedArgs": {
      "begin": "\\s*([^\\)]*?)(?=(?:\\(|')(?<=^.{0,71}))",
      "end": "(?=.*)",
      "applyEndPatternLast": 1,
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.hlasm",
          "patterns": [
            {
              "include": "#additionalAsmHighlight"
            }
          ]
        }
      },
      "patterns": [
        {
          "include": "#openParenthesis"
        },
        {
          "include": "#stringTypeMultiline"
        }
      ]
    },
    "openParenthesis": {
      "patterns": [
        {
          "begin": "(?<!^)\\(\\s*(?<=^.{0,71})",
          "end": "(?=^\\s*\\S+(?<=^.{0,15}))|(?=^.{80}\\s*\\S+)|(\\)(?<=^.{0,71}))|(((?<=^.{71}\\s.*)|(?<=^.{0,71}))$)",
          "applyEndPatternLast": 0,
          "patterns": [
            {
              "include": "#invalidMultilineBlock"
            },
            {
              "include": "#asmArgumentsOnly"
            },
            {
              "include": "#lineEnd"
            }
          ]
        }
      ]
    },
    "stringTypeMultiline": {
      "patterns": [
        {
          "begin": "(')(?<=^.{0,71})",
          "end": "(?=^\\s*\\S+(?<=^.{0,15}))|(?=^.{80}\\s*\\S+)|((.*?')(?<=^.{0,71})|(^.{71}(?=\\s))|(^.{0,71}$))",
          "applyEndPatternLast": 0,
          "beginCaptures": {
            "1": {
              "name": "string.hlasm"
            }
          },
          "endCaptures": {
            "1": {
              "name": "string.hlasm"
            }
          },
          "patterns": [
            {
              "include": "#invalidMultilineBlock"
            },
            {
              "patterns": [
                {
                  "match": "(.+(?<=^.{0,71}))",
                  "captures": {
                    "1": {
                      "name": "string.hlasm"
                    }
                  }
                }
              ]
            },
            {
              "include": "#lineEnd"
            }
          ]
        }
      ]
    },
    "stringType": {
      "patterns": [
        {
          "match": "(\\S*?)('.*?')(?<=^.{0,71})",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            },
            "2": {
              "name": "string.hlasm"
            }
          }
        }
      ]
    },
    "quoteType": {
      "patterns": [
        {
          "match": "(\\S*?)([LKNT]')(?<=^.{0,71})",
          "captures": {
            "1": {
              "name": "keyword.control.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            },
            "2": {
              "name": "support.type.hlasm"
            }
          }
        }
      ]
    },
    "lineEnd": {
      "name": "source.hlasm.lineEnd",
      "match": "(?<=^.{71})(.)(.*)$",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#continuationSymbol"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#sequenceNumbers"
            }
          ]
        }
      }
    },
    "nameFieldAndInstruction": {
      "match": "(^[^*]\\S*)?\\s+(\\S+)",
      "captures": {
        "1": {
          "patterns": [
            {
              "include": "#nameField"
            }
          ]
        },
        "2": {
          "patterns": [
            {
              "include": "#instruction"
            }
          ]
        }
      }
    },
    "nameField": {
      "patterns": [
        {
          "include": "#sequenceSymbolNameField"
        },
        {
          "include": "#label"
        }
      ]
    },
    "sequenceSymbolNameField": {
      "match": "^\\.\\S+",
      "name": "keyword.control.hlasm"
    },
    "sequenceSymbolOperandField": {
      "match": "(?:(?<=\\)))\\.[a-zA-Z@$#_]+(?=\\s|$)(?<=^.{0,71})",
      "name": "keyword.control.hlasm"
    },
    "label": {
      "match": "^\\S+",
      "name": "support.class.hlasm"
    },
    "instruction": {
      "match": "\\S+",
      "name": "entity.name.function.hlasm"
    },
    "remark": {
      "match": ".*",
      "name": "comment.hlasm"
    },
    "operators": {
      "match": "[=(),+]",
      "name": "keyword.operator.hlasm"
    },
    "numbers": {
      "match": "(?<=[=(),*\\s+])-?\\d*(?=[=(),*+\\s]|$)",
      "name": "constant.numeric.hlasm"
    },
    "asmSpecialStatements": {
      "match": "(?<=[=(),*+\\s])=?\\d*(A|B|C|D|E|F|G|H|P|V|X|Z)(L\\d*)?(?=[=(),*\\s+]|$)",
      "name": "support.type.hlasm"
    },
    "sequenceNumbers": {
      "match": ".*",
      "name": "constant.numeric.hlasm"
    },
    "continuationSymbol": {
      "match": "\\S",
      "name": "keyword.other.hlasm"
    }
  },
  "scopeName": "source.hlasmTextmate"
}