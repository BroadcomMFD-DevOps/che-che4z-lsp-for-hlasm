{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "IBM HLASM",
  "scopeName": "source.hlasm",
  "patterns": [
    {
      "include": "#hlasm_syntax"
    }
  ],
  "repository": {
    "hlasm_syntax": {
      "patterns": [
        {
          "include": "#lineComment"
        },
        {
          "include": "#parseLine"
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "lineComment": {
      "patterns": [
        {
          "begin": "(?=^)(\\*|\\.\\*)",
          "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
          "applyEndPatternLast": 1,
          "beginCaptures": {
            "1": {
              "patterns": [
                {
                  "include": "#remark"
                }
              ]
            }
          },
          "patterns": [
            {
              "include": "#remarksOrInvalidLine"
            }
          ]
        }
      ]
    },
    "parseLine": {
      "patterns": [
        {
          "begin": "^(?=.{1,71})",
          "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
          "applyEndPatternLast": 1,
          "patterns": [
            {
              "include": "#nameField"
            },
            {
              "include": "#instruction"
            },
            {
              "include": "#operandsAndRemarks"
            },
            {
              "include": "#lineEnd"
            }
          ]
        }
      ]
    },
    "operandsAndRemarks": {
      "begin": "\\s*(?=\\S)(?<=^.{4,71})",
      "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
      "applyEndPatternLast": 0,
      "patterns": [
        {
          "include": "#invalidMultilineBlock"
        },
        {
          "match": "(^\\s{15})",
          "comment": "Just to get rid of the spaces"
        },
        {
          "include": "#sequenceSymbolOperandField"
        },
        {
          "include": "#asmArguments"
        },
        {
          "match": "(?<=,)\\s(.*)(?<=^.{0,71})",
          "comment": "Operands will continue on next line",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#remark"
                }
              ]
            }
          }
        },
        {
          "begin": "(?<!,)(?=\\s(?<=^.{0,71}))",
          "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$",
          "applyEndPatternLast": 1,
          "comment": "Operands ended on this line",
          "patterns": [
            {
              "include": "#remarksOrInvalidLine"
            }
          ]
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "remarksOrInvalidLine": {
      "patterns": [
        {
          "include": "#invalidMultilineBlock"
        },
        {
          "include": "#remark"
        },
        {
          "include": "#lineEnd"
        }
      ]
    },
    "invalidMultilineBlock": {
      "begin": "(?=^\\s*\\S(?<=^.{0,15}))",
      "end": "((?<=^.{71}\\s.*)|(?<=^.{0,71}))$|(?=^$)",
      "applyEndPatternLast": 0,
      "patterns": [
        {
          "match": "^.*",
          "name": "invalid.illegal"
        }
      ]
    },
    "asmArguments": {
      "patterns": [
        {
          "include": "#quoteType"
        },
        {
          "include": "#openEndedArgs"
        },
        {
          "match": "([^\\s=(),'*/+-]+)(?<=^.{0,71})",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            }
          }
        }
      ]
    },
    "quoteType": {
      "patterns": [
        {
          "match": "([^a-zA-Z@$#_0-9()']*?)([LKNTlknt])'(?<=^.{0,71})",
          "captures": {
            "1": {
              "name": "keyword.control.hlasm",
              "patterns": [
                {
                  "include": "#additionalAsmHighlight"
                }
              ]
            },
            "2": {
              "name": "entity.name.function.preprocessor.hlasm"
            }
          }
        }
      ]
    },
    "openEndedArgs": {
      "begin": "\\s*(?=(?:[('])(?<=^.{0,71}))",
      "end": "(?=.*)",
      "applyEndPatternLast": 1,
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.hlasm",
          "patterns": [
            {
              "include": "#additionalAsmHighlight"
            }
          ]
        }
      },
      "patterns": [
        {
          "include": "#parenthesis"
        },
        {
          "include": "#stringType"
        }
      ]
    },
    "parenthesis": {
      "patterns": [
        {
          "begin": "(?<!^)[(]\\s*(?<=^.{0,71})",
          "end": "(?=^\\s*\\S(?<=^.{0,15}))|([)](?<=^.{0,71}))|(((?<=^.{71}\\s.*)|(?<=^.{0,71}))$)",
          "applyEndPatternLast": 0,
          "patterns": [
            {
              "include": "#asmArguments"
            },
            {
              "include": "#lineEnd"
            }
          ]
        }
      ]
    },
    "stringType": {
      "patterns": [
        {
          "begin": "(?<!^)(')(?<=^.{0,71})",
          "end": "(?=^\\s*\\S(?<=^.{0,15}))|((.*?')(?<=^.{0,71})|([^']*)(?<=^.{71})(?=\\s)|(^.{0,71}$))",
          "applyEndPatternLast": 0,
          "beginCaptures": {
            "1": {
              "name": "string.hlasm"
            }
          },
          "endCaptures": {
            "1": {
              "patterns": [
                {
                  "match": "[^&]+",
                  "name": "string.hlasm"
                },
                {
                  "include": "#variable"
                }
              ]
            }
          },
          "patterns": [
            {
              "match": "[^&]+(?<=^.{0,71})",
              "name": "string.hlasm"
            },
            {
              "include": "#variable"
            },
            {
              "include": "#lineEnd"
            }
          ]
        }
      ]
    },
    "lineEnd": {
      "patterns": [
        {
          "include": "#continuationSymbol"
        },
        {
          "include": "#sequenceNumbers"
        }
      ]
    },
    "additionalAsmHighlight": {
      "patterns": [
        {
          "include": "#asmSpecialStatements"
        },
        {
          "include": "#operators"
        },
        {
          "include": "#numbers"
        },
        {
          "include": "#variable"
        }
      ]
    },
    "nameField": {
      "patterns": [
        {
          "include": "#sequenceSymbolNameField"
        },
        {
          "include": "#ordinarySymbol"
        },
        {
          "include": "#variable"
        },
        {
          "include": "#operators"
        }
      ]
    },
    "sequenceSymbolNameField": {
      "match": "^\\.[A-Za-z@#$_][A-Za-z@#$_0-9]*(?<=^.{0,71})",
      "name": "keyword.control.hlasm"
    },
    "sequenceSymbolOperandField": {
      "match": "\\.[A-Za-z@#$_][A-Za-z@#$_0-9]*(?=\\s|$)(?<=^.{0,71})",
      "name": "keyword.control.hlasm"
    },
    "instruction": {
      "match": "(?<=^\\S*)\\s+\\S+(?<=^.{0,71})",
      "name": "entity.name.function.hlasm"
    },
    "remark": {
      "match": "(\\S+)(?<=^.{0,71})",
      "name": "comment.hlasm"
    },
    "operators": {
      "match": "[=(),*/+-\\.](?<=^.{0,71})",
      "name": "keyword.operator.hlasm"
    },
    "numbers": {
      "match": "(?<=[=(),*\\s+])-?\\d*((?=[=(),*+\\s]|$)(?<=^.{0,71}))",
      "name": "constant.numeric.hlasm"
    },
    "variable": {
      "match": "&(([A-Za-z@#$_][A-Za-z@#$_0-9]*)|([(].*?[)]))(?<=^.{0,71})",
      "name": "variable.other.readwrite.hlasm"
    },
    "ordinarySymbol": {
      "match": "[A-Za-z@#$_][A-Za-z@#$_0-9]*(?<=^.{0,71})",
      "name": "support.class.hlasm"
    },
    "asmSpecialStatements": {
      "match": "(?<=[=(),*+\\s])=?\\d*(A|B|C|D|E|F|G|H|P|V|X|Z)(L\\d*)?((?=[=(),*\\s+]|$)(?<=^.{0,71}))",
      "name": "punctuation.definition.tag.hlasm"
    },
    "continuationSymbol": {
      "match": "\\s*(?<=^.{71})\\S",
      "name": "keyword.other.hlasm"
    },
    "sequenceNumbers": {
      "match": "\\s*.?(?<=^.{72}).+$",
      "name": "invalid.ignored"
    }
  }
}
